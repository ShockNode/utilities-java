
plugins {
    id 'java-library'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'


group 'com.shocknode'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6' //version required
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            pom {
                name = 'Utilities'
                description = 'Java utility methods'
                url = 'https://github.com/ShockNode/utilities-java'
                licenses {
                    license {
                        name = 'Mozilla Public License Version 2.0'
                        url = 'https://www.mozilla.org/en-US/MPL/2.0/'
                    }
                }
                developers {
                    developer {
                        id = 'brentlrayjr'
                        name = 'Brent Ray'
                        email = 'brentlrayjr@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ShockNode/utilities-java.git'
                    developerConnection = 'scm:git:ssh://github.com:ShockNode/utilities-java.git'
                    url = 'https://github.com/ShockNode/utilities-java/tree/master'
                }
            }

            from components.java

            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }

        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

